/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package electronic.ballot.box;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author RtrSuahantNadkar
 */
public class ElectronicBallotBox extends javax.swing.JFrame {

    boolean f;
    int selectCount = 0;
    JCheckBox[] cbox;
    int totalVolunteerVote = 0;
    int totalParticipantVote = 0;
    int[] volunteerVote = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    int[] participantVote = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    float[] totalVote = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    JTextField[] tfield;
    Map[] pair = new Map[10];

    /**
     * Creates new form NewJFrame
     */
    public ElectronicBallotBox() {
        initComponents();
        f = false;
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        jTextField10.setEditable(false);
        jTextField11.setEditable(false);
        jTextField12.setEditable(false);

//        jLabel3.setEnabled(false);
//        jLabel5.setEnabled(false);
//        jLabel8.setEnabled(false);
//        jLabel11.setEnabled(false);
//        jLabel14.setEnabled(false);
//        jLabel16.setEnabled(false);
//        jLabel19.setEnabled(false);
//        jLabel22.setEnabled(false);
//        jLabel25.setEnabled(false);
//        jLabel28.setEnabled(false);

        this.cbox = new JCheckBox[]{jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6, jCheckBox7, jCheckBox8, jCheckBox9, jCheckBox10};
        this.tfield = new JTextField[]{jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10};

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jCheckBox9 = new javax.swing.JCheckBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jCheckBox10 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jCheckBox11 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(240, 233, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Electronic Ballot Box"));

        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electronic/ballot/box/arrow.png"))); // NOI18N

        jCheckBox10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Result");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField1.setText("Candidate 1");

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField2.setText("Candidate 2");

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField3.setText("Candidate 3");

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField4.setText("Candidate 4");

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField5.setText("Candidate 5");

        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField6.setText("Candidate 6");

        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField7.setText("Candidate 7");

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField8.setText("Candidate 8");

        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField9.setText("Candidate 9");

        jTextField10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jTextField10.setText("Candidate 10");

        jCheckBox11.setText("Volunteer / Judge");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jLabel1.setText("Weightage of votes (in %):");

        jLabel2.setText("Volunteer / Judge");

        jTextField11.setText("70");

        jLabel7.setText("Public");

        jTextField12.setText("30");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(13, 13, 13)
                                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox6))
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox9)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addComponent(jCheckBox11)
                        .addComponent(jLabel2)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jCheckBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jCheckBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Submit button
        if (selectCount == 2) {
            FileInputStream fis = null;
            try {
                // Play buzzer sound
                fis = new FileInputStream(new File(getClass().getResource("Buzz.mp3").toString().substring(6)));
                BufferedInputStream bis = new BufferedInputStream(fis);
                Player player = new Player(bis);
                player.play();

                // Add votes
                if(jCheckBox11.isSelected() == true){
                    totalVolunteerVote++;
//                } else {
                    totalParticipantVote++;
                }
                if(jCheckBox11.isSelected()) {
                    if(jCheckBox1.isSelected()) {
                        volunteerVote[0]++;
                    }
                    if(jCheckBox2.isSelected()) {
                        volunteerVote[1]++;
                    }
                    if(jCheckBox3.isSelected()) {
                        volunteerVote[2]++;
                    }
                    if(jCheckBox4.isSelected()) {
                        volunteerVote[3]++;
                    }
                    if(jCheckBox5.isSelected()) {
                        volunteerVote[4]++;
                    }
                    if(jCheckBox6.isSelected()) {
                        volunteerVote[5]++;
                    }
                    if(jCheckBox7.isSelected()) {
                        volunteerVote[6]++;
                    }
                    if(jCheckBox8.isSelected()) {
                        volunteerVote[7]++;
                    }
                    if(jCheckBox9.isSelected()) {
                        volunteerVote[8]++;
                    }
                    if(jCheckBox10.isSelected()) {
                        volunteerVote[9]++;
                    }
                } else {
                    if(jCheckBox1.isSelected()) {
                        participantVote[0]++;
                    }
                    if(jCheckBox2.isSelected()) {
                        participantVote[1]++;
                    }
                    if(jCheckBox3.isSelected()) {
                        participantVote[2]++;
                    }
                    if(jCheckBox4.isSelected()) {
                        participantVote[3]++;
                    }
                    if(jCheckBox5.isSelected()) {
                        participantVote[4]++;
                    }
                    if(jCheckBox6.isSelected()) {
                        participantVote[5]++;
                    }
                    if(jCheckBox7.isSelected()) {
                        participantVote[6]++;
                    }
                    if(jCheckBox8.isSelected()) {
                        participantVote[7]++;
                    }
                    if(jCheckBox9.isSelected()) {
                        participantVote[8]++;
                    }
                    if(jCheckBox10.isSelected()) {
                        participantVote[9]++;
                    }
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElectronicBallotBox.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JavaLayerException ex) {
                Logger.getLogger(ElectronicBallotBox.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                    for (JCheckBox cb : cbox) {
                        if (cb.isSelected() == true) {
                            cb.setSelected(false);
                        }
                    }
                    for (JCheckBox cb1 : cbox) {
                        if (cb1.isSelected() == false) {
                            cb1.setEnabled(true);
                        }
                    }
                    selectCount = 0;
                } catch (IOException ex) {
                    Logger.getLogger(ElectronicBallotBox.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please select 2 candidates");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // Reset button
        JPasswordField pf = new JPasswordField();

        String password = null;
        int okCxl = JOptionPane.showConfirmDialog(null, pf, "Enter Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (okCxl == JOptionPane.OK_OPTION) {
            password = new String(pf.getPassword());
        }
        if (password == null ? new String("summer15") == null : password.equals(new String("summer15"))) {
            if (f == false) {
                jButton2.setText("Done");
                f = true;
                jTextField1.setEditable(true);
                jTextField2.setEditable(true);
                jTextField3.setEditable(true);
                jTextField4.setEditable(true);
                jTextField5.setEditable(true);
                jTextField6.setEditable(true);
                jTextField7.setEditable(true);
                jTextField8.setEditable(true);
                jTextField9.setEditable(true);
                jTextField10.setEditable(true);
                jTextField11.setEditable(true);
                jTextField12.setEditable(true);

//                jLabel3.setEnabled(true);
//                jLabel5.setEnabled(true);
//                jLabel8.setEnabled(true);
//                jLabel11.setEnabled(true);
//                jLabel14.setEnabled(true);
//                jLabel16.setEnabled(true);
//                jLabel19.setEnabled(true);
//                jLabel22.setEnabled(true);
//                jLabel25.setEnabled(true);
//                jLabel28.setEnabled(true);

            } else if (f == true) {
                jButton2.setText("Reset");
                f = false;
                jTextField1.setEditable(false);
                jTextField2.setEditable(false);
                jTextField3.setEditable(false);
                jTextField4.setEditable(false);
                jTextField5.setEditable(false);
                jTextField6.setEditable(false);
                jTextField7.setEditable(false);
                jTextField8.setEditable(false);
                jTextField9.setEditable(false);
                jTextField10.setEditable(false);
                jTextField11.setEditable(false);
                jTextField12.setEditable(false);

//                jLabel3.setEnabled(false);
//                jLabel5.setEnabled(false);
//                jLabel8.setEnabled(false);
//                jLabel11.setEnabled(false);
//                jLabel14.setEnabled(false);
//                jLabel16.setEnabled(false);
//                jLabel19.setEnabled(false);
//                jLabel22.setEnabled(false);
//                jLabel25.setEnabled(false);
//                jLabel28.setEnabled(false);

                for (JCheckBox cb : cbox) {
                        if (cb.isSelected() == true) {
                            cb.setSelected(false);
                        }
                    }
                    for (JCheckBox cb1 : cbox) {
                        if (cb1.isSelected() == false) {
                            cb1.setEnabled(true);
                        }
                    }
                    selectCount = 0;
            }
        } else {
            if (okCxl == JOptionPane.OK_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "Wrong password");
                jButton2ActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // Result button
        JPasswordField pf = new JPasswordField();
        String password = null;
        int okCxl = JOptionPane.showConfirmDialog(this, pf, "Enter Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (okCxl == JOptionPane.OK_OPTION) {
            password = new String(pf.getPassword());
        }
        if (password.equals(new String("summer15"))) {
            // creating pie chart
            /*DefaultPieDataset pieDataset = new DefaultPieDataset();
             pieDataset.setValue("candidate1", new Integer(10));
             pieDataset.setValue("candidate2", new Integer(30));
             pieDataset.setValue("candidate3", new Integer(10));
             pieDataset.setValue("candidate4", new Integer(60));
             pieDataset.setValue("candidate5", new Integer(20));
             JFreeChart chart = ChartFactory.createPieChart("pie chart", pieDataset);
             PiePlot p = (PiePlot) chart.getPlot();
             ChartFrame frame = new ChartFrame("Pie chart", chart);
             frame.setVisible(true);
             frame.setSize(800, 600);*/
            
            for(int i = 0;i < 10;i++) {
                
                totalVote[i] = ((((float)volunteerVote[i])/totalVolunteerVote) * (Integer.parseInt(jTextField11.getText()))) + ((((float)participantVote[i])/totalParticipantVote) * (Integer.parseInt(jTextField12.getText())));
                                    
            }
            
            for (int i = 0; i < 10; i++) {
                System.out.println(totalVote[i] + "    " + tfield[i].getText());
            }
            
            // creating bar chart
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            dataset.setValue(totalVote[0], "Votes", jTextField1.getText());
            dataset.setValue(totalVote[1], "Votes", jTextField2.getText());
            dataset.setValue(totalVote[2], "Votes", jTextField3.getText());
            dataset.setValue(totalVote[3], "Votes", jTextField4.getText());
            dataset.setValue(totalVote[4], "Votes", jTextField5.getText());
            dataset.setValue(totalVote[5], "Votes", jTextField6.getText());
            dataset.setValue(totalVote[6], "Votes", jTextField7.getText());
            dataset.setValue(totalVote[7], "Votes", jTextField8.getText());
            dataset.setValue(totalVote[8], "Votes", jTextField9.getText());
            dataset.setValue(totalVote[9], "Votes", jTextField10.getText());
            JFreeChart chart = ChartFactory.createBarChart3D("Election Results", "Candidates", "Votes", dataset, PlotOrientation.VERTICAL, false, true, false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.black);
            ChartFrame frame = new ChartFrame("Election Result", chart);
            frame.setVisible(true);
            frame.setExtendedState(ChartFrame.MAXIMIZED_BOTH);
            
            
            for (int j = 0; j < totalVote.length; j++) {
                totalVote[j] = 0;
            }

        } else {
            if (okCxl == JOptionPane.OK_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "Wrong password");
                jButton3ActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel3.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel3.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel5.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel5.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel8.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel8.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel11.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel11.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel14.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel14.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel16.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel16.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel19.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel19.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel22.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel22.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel25.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel25.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                Dimension label = jLabel28.getSize();
                JFileChooser jfc = new JFileChooser();
                jfc.setVisible(true);
                FileFilter filter = new FileNameExtensionFilter("Image files (*.jpg,*.jpeg,*.png)", new String[]{"jpg", "jpeg", "png"});
                jfc.setFileFilter(filter);
                int retVal = jfc.showOpenDialog(this);
                if (retVal == JFileChooser.APPROVE_OPTION) {
                    BufferedImage image = ImageIO.read(new File(jfc.getSelectedFile().getPath()));
                    Image scaled = image.getScaledInstance(label.width, label.height, Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(scaled);
                    jLabel28.setIcon(imageIcon);

                }

            } catch (IOException ex) {
                Logger.getLogger(ElectronicBallotBox.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel28MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:


    }//GEN-LAST:event_formWindowOpened

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox1.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox2.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox3.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox3.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox4.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox4.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox5.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox5.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox6.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox6.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox7.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox7.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox8.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox8.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox9.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox9.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox10.isSelected() == true) {
            selectCount++;
        } else if (jCheckBox10.isSelected() == false) {
            selectCount--;
        }
        if (selectCount == 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(false);
                }
            }
        } else if (selectCount < 2) {
            for (JCheckBox cb : cbox) {
                if (cb.isSelected() == false) {
                    cb.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
        // volunteer checkbox
        JPasswordField pf = new JPasswordField();
        String password = null;
        int okCxl = JOptionPane.showConfirmDialog(null, pf, "Enter Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (okCxl == JOptionPane.OK_OPTION) {
            password = new String(pf.getPassword());
        }
        if (password == null ? new String("summer15") == null : password.equals(new String("summer15"))) {
            if (jCheckBox11.isSelected() == true) {
                jCheckBox11.setSelected(true);
            } else if (jCheckBox11.isSelected() == false) {
                jCheckBox11.setSelected(false);
            }
        } else {
            if (okCxl == JOptionPane.OK_OPTION) {
                jCheckBox11.setSelected(false);
                JOptionPane.showMessageDialog(rootPane, "Wrong password");
                jCheckBox11ActionPerformed(evt);
            } else if (okCxl == JOptionPane.CANCEL_OPTION || okCxl == JOptionPane.CLOSED_OPTION) {
                if (jCheckBox11.isSelected()) {
                    jCheckBox11.setSelected(false);
                } else {
                    jCheckBox11.setSelected(true);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElectronicBallotBox.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ElectronicBallotBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
